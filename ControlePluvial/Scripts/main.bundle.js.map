{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/cadastro.service.ts","./src/app/utils/HttpHelper.ts","./src/app/web-api/web-api.component.css","./src/app/web-api/web-api.component.html","./src/app/web-api/web-api.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-web-api></app-web-api>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  isCollapsed = true;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { CadastroService } from './services/cadastro.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgForm } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { Renderer2 } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { WebApiComponent } from './web-api/web-api.component';\r\nimport { CollapseModule, BsDropdownModule } from 'ngx-bootstrap';\r\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\r\nimport { NgModel } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WebApiComponent\r\n  ],\r\n  imports: [\r\n     CollapseModule.forRoot(), BsDropdownModule.forRoot(),\r\n    // NgbModule.forRoot(),\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    HttpClientXsrfModule.withOptions({\r\n      cookieName: 'XSRF-TOKEN',\r\n      headerName: 'X-XSRF-TOKEN'\r\n  }),\r\n  ],\r\n  providers: [CadastroService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { HttpHelper } from './../utils/HttpHelper';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\nimport { NgModel } from '@angular/forms';\r\n          // tslint:disable:prefer-const\r\n@Injectable()\r\nexport class CadastroService extends HttpHelper {\r\n  private _cadastraArduino = 'Arduino/CadastraArduino';\r\n  private _cadastraProduto = 'Produto/CadastraProduto';\r\n  private _buscaArduino = 'Arduino/GetArduino';\r\n  private _buscaProdutos = 'Produto/GetProdutos';\r\n  private _delArd = 'Arduino/apagaArd';\r\n  private _altArd = 'Arduino/AlteraArd';\r\n  private _altProd = 'Produto/AlteraProd';\r\n  private _delProd = 'Produto/ApagaProd';\r\n  private _reportProdCat = 'Reports/GetProdCat';\r\n\r\n  constructor( http: Http) {\r\n    super(http);\r\n  }\r\n  cadastraArduino(NomeArdParam: string) {\r\n    let result = this.postaction(this._cadastraArduino, { NomeArd: NomeArdParam}).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let arduino = <any>result;\r\n          return arduino;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n\r\n  cadastraProduto(nomeProdParam: string, IdLoraParam: Number) {\r\n    let result = this.postaction(this._cadastraProduto, { NomeProd: nomeProdParam, IdLora: IdLoraParam}).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n  alteraArd( IdLoraParam: Number, NomeArdParam: string) {\r\n    let result = this.putaction(this._altArd + `?IdLora=${IdLoraParam}`, { NomeArd: NomeArdParam, }).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n  alteraProd( idProdParam: Number, nomeProdParam: string) {\r\n    let result = this.putaction(this._altProd + `?IdProd=${idProdParam}`, { NomeProd: nomeProdParam, }).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n  buscaArduino(IdLoraParam: Number, NomeArdParam: string ) {\r\n    let result = this.getaction(this._buscaArduino, { NomeArd: NomeArdParam, IdLora: IdLoraParam}).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n  buscaProduto(idProdParam: number, nomeProdParam: string, IdLoraParam: number) {\r\n    let result = this.getaction(this._buscaProdutos,\r\n      { IdProd: idProdParam, NomeProd: nomeProdParam, IdLora: IdLoraParam}).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n\r\n  apagaArd(IdLoraParam: number ) {\r\n    let result = this.deleteaction(this._delArd, { IdLora: IdLoraParam }).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n\r\n  apagaProd(idProdParam: number ) {\r\n    let result = this.deleteaction(this._delProd, { IdProd: idProdParam }).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n  reportProdCat(idProdParam: number, nomeProdParam: string, IdLoraParam: number, NomeArdParam: string) {\r\n    let result = this.getaction(this._reportProdCat,\r\n      { IdProd: idProdParam, NomeProd: nomeProdParam, IdLora: IdLoraParam, NomeArd: NomeArdParam}).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/cadastro.service.ts","import { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\n\r\nexport class HttpHelper {\r\n    private _base = \"API/\";\r\n    constructor(private _http: Http) {\r\n    }\r\n\r\n    get haserror(): boolean {\r\n        return this.errormsg != null;\r\n    }\r\n\r\n    errormsg: string;\r\n\r\n    private obj_to_query(obj: any) {\r\n        var parts: any = [];\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                parts.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));\r\n            }\r\n        }\r\n        return parts? \"?\" + parts.join('&'): \"\";\r\n    }\r\n\r\n    getaction<T>(path: string, body: any = null) {\r\n        return this._http.get(this._base + path + this.obj_to_query(body))\r\n            .map(res => {\r\n                return <T>res.json();\r\n            })\r\n            .catch(this._handleError);\r\n    }\r\n\r\n    deleteaction<T>(path: string, body: any = null) {\r\n      return this._http.delete(this._base + path + this.obj_to_query(body))\r\n          .map(res => {\r\n              return <T>res.json();\r\n          })\r\n          .catch(this._handleError);\r\n  }\r\n\r\n    postaction(path: string, param: any = null) {\r\n        this.errormsg = null;\r\n\r\n        let body = JSON.stringify(param);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this._http.post(this._base + path, body, options)\r\n            .map(this._handleSuccess)\r\n            .catch(this._handleError);\r\n    }\r\n    putaction(path: string, param: any = null) {\r\n      this.errormsg = null;\r\n\r\n      let body = JSON.stringify(param);\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n\r\n      return this._http.put(this._base + path, body, options)\r\n          .map(this._handleSuccess)\r\n          .catch(this._handleError);\r\n  }\r\n\r\n    private _handleError(error: Response) {\r\n        if (error.status == 401) {\r\n            localStorage.removeItem('currentUser');\r\n            location.reload();\r\n        }\r\n\r\n        return Observable.throw(error || 'Server error');\r\n    }\r\n    private _handleSuccess(success: Response) {\r\n        var jsonresult = null;\r\n        try {\r\n            jsonresult = success.json();\r\n        } catch (ex) {\r\n            return success;\r\n        }\r\n\r\n        return jsonresult;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/utils/HttpHelper.ts","module.exports = \".menu-fixed{\\r\\n  top: 20px\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/web-api/web-api.component.css\n// module id = ./src/app/web-api/web-api.component.css\n// module chunks = main","module.exports = \"<head><script type=\\\"text/javascript\\\">\\r\\n  google.charts.load('current', {'packages':['corechart']});\\r\\n  google.charts.setOnLoadCallback(drawChart);\\r\\n\\r\\n  function drawChart() {\\r\\n    var data = google.visualization.arrayToDataTable([\\r\\n      ['Dia', 'Litros'],\\r\\n      ['1',  10],\\r\\n      ['2',  1170],\\r\\n      ['3',  660],\\r\\n      ['4',  1030],\\r\\n      ['4',  1030],\\r\\n      ['4',  1030],\\r\\n      ['4',  1030],\\r\\n      ['4',  1030]\\r\\n\\r\\n    ]);\\r\\n\\r\\n    var options = {\\r\\n      title: 'Quantidade de Litros Medidos Por Dia',\\r\\n      curveType: 'function',\\r\\n      legend: { position: 'bottom' }\\r\\n    };\\r\\n\\r\\n    var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));\\r\\n\\r\\n    chart.draw(data, options);\\r\\n  }\\r\\n</script></head>\\r\\n<body class=\\\"fixed-nav sticky-footer bg-dark\\\" id=\\\"page-top\\\">\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\" id=\\\"mainNav\\\">\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo03\\\" aria-controls=\\\"navbarTogglerDemo03\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n        </button>\\r\\n      <a class=\\\"navbar-brand text-white bg-dark\\\" (click)=\\\"aba= 'home'\\\">Controle Pluvial</a>\\r\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo03\\\">\\r\\n          <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\"  (click)=\\\"aba= 'reportProd'\\\">Fluxo Diario</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\" (click)=\\\"aba= 'reportFluxoMensal'\\\">Fluxo Mensal</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\" (click)=\\\"aba= 'reportCat'\\\">Dispositivos</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n    </nav>\\r\\n\\r\\n\\r\\n</body>\\r\\n\\r\\n<form [ngSwitch]=\\\"aba\\\" >\\r\\n      <!--Produtos-->\\r\\n    <div class=\\\"container\\\" *ngSwitchCase=\\\"'cadastroProd'\\\">\\r\\n        <div class=\\\"card card-register mx-auto mt-5\\\">\\r\\n          <div class=\\\"card-header text-center\\\">Cadastra Produto</div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <form>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <label for=\\\"NomeProd\\\">Produto</label>\\r\\n                    <input class=\\\"form-control\\\" id=\\\"NomeProd\\\" name=\\\"NomeProd\\\" type=\\\"text\\\" placeholder=\\\"Digite o nome do produto\\\"[(ngModel)]=\\\"NomeProd\\\" required>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <label for=\\\"arduino\\\">Selecione a categoria</label>\\r\\n              <div class=\\\"form-group col align-self-center\\\">\\r\\n                  <select [(ngModel)]=\\\"IdLora\\\" class=\\\"custom-select\\\"  name=\\\"arduino\\\">\\r\\n                      <option *ngFor=\\\"let busca of arduinos\\\" [value]=\\\"busca.IdLora\\\">{{busca.IdLora}} | {{busca.NomeArd}}</option>\\r\\n                  </select>\\r\\n              </div>\\r\\n              <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"cadastrarProduto(NomeProd, IdLora);\\\">Cadastrar Produto</a>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n        <div class=\\\"container\\\" *ngSwitchCase=\\\"'delProd'\\\">\\r\\n          <div class=\\\"card card-register mx-auto mt-5\\\">\\r\\n            <div class=\\\"card-header text-center\\\">Deleta Produto</div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <form>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                      <label for=\\\"produtos\\\">Produto</label>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <select [(ngModel)]=\\\"IdProd\\\" class=\\\"custom-select\\\"  name=\\\"produtos\\\">\\r\\n                            <option *ngFor=\\\"let buscaProd of produtos\\\" [value]=\\\"buscaProd.IdProd\\\">{{buscaProd.IdProd}} | {{buscaProd.NomeProd}}</option>\\r\\n                        </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"apagarProd(IdProd);\\\">Deletar Produto</a>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"container\\\" *ngSwitchCase=\\\"'altProd'\\\">\\r\\n            <div class=\\\"card card-register mx-auto mt-5\\\">\\r\\n              <div class=\\\"card-header text-center\\\">Alterar Produto</div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <form>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"form-row\\\">\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                            <label for=\\\"produtos\\\">Produto</label>\\r\\n                            <input class=\\\"form-control\\\" [(ngModel)]=\\\"NomeProd\\\" id=\\\"produtos\\\" name=\\\"produtos\\\" type=\\\"text\\\" placeholder=\\\"Digite o novo nome do produto.\\\" required>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"col-md-12\\\">\\r\\n                        <label for=\\\"produtos\\\">Selecione o Produto</label>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <select class=\\\"custom-select\\\"  [(ngModel)]=\\\"IdProd\\\" name=\\\"produtos\\\">\\r\\n                                <option *ngFor=\\\"let busca of produtos\\\" [value]=\\\"busca.IdProd\\\">{{busca.NomeProd}}</option>\\r\\n                            </select>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"alterarProd(IdProd);\\\">Alterar Produto</a>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        <!--arduino !-->\\r\\n        <div class=\\\"container\\\" *ngSwitchCase=\\\"'cadastroCat'\\\">\\r\\n            <div class=\\\"card card-register mx-auto mt-5\\\">\\r\\n              <div class=\\\"card-header text-center\\\">Cadastra Categoria</div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <form>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                      <div class=\\\"col-md-12\\\">\\r\\n                        <label for=\\\"NomeArd\\\">Categoria</label>\\r\\n                        <input class=\\\"form-control\\\" id=\\\"NomeArd\\\" name=\\\"NomeArd\\\" type=\\\"text\\\" placeholder=\\\"Digite o nome da categoria\\\"[(ngModel)]=\\\"NomeArd\\\" required>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"cadastrarArduino(NomeArd);\\\">Cadastrar Categoria</a>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"container\\\" *ngSwitchCase=\\\"'delCat'\\\">\\r\\n              <div class=\\\"card card-register mx-auto mt-5\\\">\\r\\n                <div class=\\\"card-header text-center\\\">Deleta Categoria</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <form>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                          <label for=\\\"arduino\\\">Categoria</label>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <select [(ngModel)]=\\\"IdLora\\\" class=\\\"custom-select\\\"  name=\\\"arduino\\\">\\r\\n                                  <option *ngFor=\\\"let busca of arduinos\\\" [value]=\\\"busca.IdLora\\\">{{busca.IdLora}} | {{busca.NomeArd}}</option>\\r\\n                              </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"apagarArd(IdLora);\\\">Deletar Categoria</a>\\r\\n                  </form>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"container\\\" *ngSwitchCase=\\\"'altCat'\\\">\\r\\n                <div class=\\\"card card-register mx-auto mt-5\\\">\\r\\n                  <div class=\\\"card-header text-center\\\">Alterar Categoria</div>\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <form>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                              <div class=\\\"col-md-12\\\">\\r\\n                                <label for=\\\"NomeArd\\\">Categoria</label>\\r\\n                                <input class=\\\"form-control\\\"  [(ngModel)]= \\\"NomeArd\\\" id=\\\"NomeArd\\\" name=\\\"NomeArd\\\" type=\\\"text\\\" placeholder=\\\"Digite o nome da categoria\\\" required>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"form-row\\\">\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                            <label for=\\\"arduino\\\">Antiga Categoria</label>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <select [(ngModel)]=\\\"IdLora\\\" class=\\\"custom-select\\\"  name=\\\"arduino\\\">\\r\\n                                    <option *ngFor=\\\"let busca of arduinos\\\" [value]=\\\"busca.IdLora\\\">{{busca.IdLora}} | {{busca.NomeArd}}</option>\\r\\n                                </select>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"alterarArd(IdLora);\\\">Alterar Categoria</a>\\r\\n                    </form>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n<!--Relatorios!-->\\r\\n<div class=\\\"container\\\" *ngSwitchCase=\\\"'reportCat'\\\">\\r\\n    <div class=\\\"card text-center\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <ul class=\\\"nav nav-tabs card-header-tabs\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link active\\\">Dispositivos</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\">Cadastro de Dispositivos</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form>\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                      <thead>\\r\\n                        <tr>\\r\\n                          <th scope=\\\"col\\\">Codigo Dipositivo</th>\\r\\n                          <th scope=\\\"col\\\">Dispositivo</th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr *ngFor=\\\"let busca of arduinos\\\">\\r\\n                          <td> {{busca.IdLora}} </td>\\r\\n                          <td>{{busca.NomeArd}}</td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                      </table>\\r\\n                      </div>\\r\\n              </form>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"container\\\" *ngSwitchCase=\\\"'reportProd'\\\">\\r\\n      <div class=\\\"card card-register mx-auto mt-5\\\">\\r\\n        <div class=\\\"card-header text-center\\\">Relatorio de Produtos Cadastrados</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <form>\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>Codigo Produto</th>\\r\\n                      <th>Produto</th>\\r\\n                      <th>Categoria</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let busca of produtos\\\">\\r\\n                      <td>{{busca.IdProd}} </td>\\r\\n                      <td>{{busca.NomeProd}}</td>\\r\\n                      <td>{{busca.IdLora}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                  </table>\\r\\n                  </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"container\\\" *ngSwitchCase=\\\"'reportFluxoMensal'\\\">\\r\\n\\r\\n      <div class=\\\"card card-register mx-auto mt-5\\\">\\r\\n        <div class=\\\"card-header text-center\\\">Relatorio Fluxo Mensal</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <label for=\\\"arduino\\\">Selecione o mes e o ano</label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <select [(ngModel)]=\\\"IdLora\\\" class=\\\"custom-select\\\"  name=\\\"arduino\\\">\\r\\n                          <option *ngFor=\\\"let busca of arduinos\\\" [value]=\\\"busca.IdLora\\\">{{busca.IdLora}} | {{busca.NomeArd}}</option>\\r\\n                      </select>\\r\\n                      <select [(ngModel)]=\\\"IdLora\\\" class=\\\"custom-select\\\"  name=\\\"arduino\\\">\\r\\n                          <option *ngFor=\\\"let busca of arduinos\\\" [value]=\\\"busca.IdLora\\\">{{busca.IdLora}} | {{busca.NomeArd}}</option>\\r\\n                      </select>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"reportsProdCat(IdLora);\\\">Gerar Relatorio</a>\\r\\n          <form>\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th></th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let busca of relatorios\\\">\\r\\n                      <td>{{busca.IdProd}} </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                  </table>\\r\\n                  </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-12 menu-fixed\\\" *ngSwitchCase=\\\"'home'\\\">\\r\\n      <div class=\\\"card text-center\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-bar-chart\\\"></i> Sistema de Controle Pluvial Puc Minas - Poços de Caldas</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h5 class=\\\"card-title\\\">Igor Alexandre Saraiva Silva e Claudio Faria</h5>\\r\\n            <p class=\\\"card-text\\\"> Com os avanços tecnologicos existentes na area de controle, economia\\r\\n            e automação de processos a Puc Minas de Poços de Caldas viu a necessidade de melhorar\\r\\n            seu controle pluvial, fazendo assim um sistema totalmente automatizado de controle. </p>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer small text-muted\\\">\\r\\n          <a href=\\\"https://www.linkedin.com/in/igoralexandre/\\\" class=\\\"btn-outline-info\\\">Linkedin - Igor Saraiva</a>\\r\\n          <a href=\\\"https://www.linkedin.com/in/igoralexandre/\\\" class=\\\"btn-outline-info\\\">Linkedin - Claudio Faria</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    </form>\\r\\n    <div id=\\\"curve_chart\\\" style=\\\"width: 900px; height: 500px\\\" ></div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/web-api/web-api.component.html\n// module id = ./src/app/web-api/web-api.component.html\n// module chunks = main","// tslint:disable:quotemark\r\nimport { CadastroService } from \"./../services/cadastro.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\n// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport \"rxjs/add/operator/map\";\r\nimport { Http } from \"@angular/http\";\r\n import { Observable } from \"rxjs/Observable\";\r\nimport { NgModel } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-web-api\",\r\n  templateUrl: \"./web-api.component.html\",\r\n  styleUrls: [\"./web-api.component.css\"]\r\n})\r\nexport class WebApiComponent implements OnInit {\r\n  // tslint:disable-next-line:no-inferrable-types\r\n  aba: string = \"home\";\r\n  NomeArd: string;\r\n  NomeProd: string;\r\n  IdLora: number;\r\n  IdProd: number;\r\n  arduinos: any[];\r\n  produtos: any[];\r\n  show: boolean;\r\n  relatorios: any[];\r\n\r\n  constructor(private service: CadastroService) {\r\n    this.buscarArduino();\r\n    this.buscarProdutos();\r\n\r\n  }\r\n\r\n  cadastrarArduino() {\r\n    this.service\r\n      .cadastraArduino(this.NomeArd)\r\n      .subscribe(retorno => alert(retorno));\r\n  }\r\n  cadastrarProduto() {\r\n    this.service\r\n      .cadastraProduto(this.NomeProd, this.IdLora)\r\n      .subscribe(retorno => alert(retorno));\r\n  }\r\n\r\n  alterarArd() {\r\n    this.service\r\n      .alteraArd(this.IdLora, this.NomeArd)\r\n      .subscribe(retorno => alert(retorno));\r\n      this.buscarArduino();\r\n  }\r\n  alterarProd() {\r\n    this.service\r\n      .alteraProd(this.IdProd, this.NomeProd)\r\n      .subscribe(retorno => alert(retorno));\r\n      this.buscarProdutos();\r\n  }\r\n  buscarArduino() {\r\n    this.service\r\n      .buscaArduino(this.IdLora, this.NomeArd)\r\n      .subscribe(retorno => (this.arduinos = retorno));\r\n  }\r\n  buscarProdutos() {\r\n    this.service\r\n      .buscaProduto(this.IdProd, this.NomeProd, this.IdLora)\r\n      .subscribe(retorno => (this.produtos = retorno));\r\n  }\r\n  apagarArd() {\r\n    this.service\r\n      .apagaArd(this.IdLora)\r\n      .subscribe(retorno => (this.arduinos = retorno));\r\n      this.buscarArduino();\r\n  }\r\n  apagarProd() {\r\n    this.service.apagaProd(this.IdProd).subscribe(retorno => {\r\n      this.produtos = retorno;\r\n      this.buscarProdutos();\r\n    });\r\n  }\r\n  reportsProdCat() {\r\n    this.service.reportProdCat(this.IdProd, this.NomeProd, this.IdLora, this.NomeArd)\r\n      .subscribe(retorno => (this.relatorios = retorno));\r\n  }\r\n  ngOnInit() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/web-api/web-api.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}